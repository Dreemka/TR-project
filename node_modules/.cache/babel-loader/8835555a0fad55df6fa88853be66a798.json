{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/babel-loader/lib/index.js!/Users/drema/Desktop/Drema/transporder/transporder/node_modules/eslint-loader/index.js??ref--13-0!/Users/drema/Desktop/Drema/transporder/transporder/src/store/modules/auth.js","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/store/modules/auth.js","mtime":1644509587423},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/babel-loader/lib/index.js","mtime":1644509624775},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/eslint-loader/index.js","mtime":1644509625425}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kcmVtYS9EZXNrdG9wL0RyZW1hL3RyYW5zcG9yZGVyL3RyYW5zcG9yZGVyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBIVFRQQVVUSCB9IGZyb20gIkAvaHR0cC1jb21tb24iOwppbXBvcnQgeyBIVFRQIH0gZnJvbSAiQC9odHRwLWNvbW1vbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTG9naW5NZXRob2QiLAogIGFjdGlvbnM6IHsKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihjdHgsIF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZW1haWwsIHBhc3N3b3JkLCByZW1lbWJlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBlbWFpbCA9IF9yZWYuZW1haWwsIHBhc3N3b3JkID0gX3JlZi5wYXNzd29yZCwgcmVtZW1iZXIgPSBfcmVmLnJlbWVtYmVyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gSFRUUEFVVEgucG9zdCgnYXV0aC9sb2dpbicsIHsKICAgICAgICAgICAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsCiAgICAgICAgICAgICAgICAgIHJlbWVtYmVyOiByZW1lbWJlcgogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgdmFyIGdldERhdGEgPSByZXNwb25zZS5kYXRhLnJlc3VsdDsKICAgICAgICAgICAgICAgICAgY3R4LmNvbW1pdCgndXBkYXRlJywgZ2V0RGF0YSk7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgICAgdGhyb3cgZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9nT3V0OiBmdW5jdGlvbiBsb2dPdXQoKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gSFRUUC5wb3N0KCdhdXRoL2xvZ291dCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKHN0YXRlLCBnZXREYXRhKSB7CiAgICAgIHN0YXRlLmdldERhdGEgPSBnZXREYXRhOwogICAgfQogIH0sCiAgc3RhdGU6IHsKICAgIGdldERhdGE6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5nZXREYXRhOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/drema/Desktop/Drema/transporder/transporder/src/store/modules/auth.js"],"names":["HTTPAUTH","HTTP","name","actions","login","ctx","email","password","remember","post","then","response","getData","data","result","commit","catch","e","console","log","logOut","mutations","update","state","getters"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,eAAvB;AACA,SAAQC,IAAR,QAAmB,eAAnB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,aADO;AAEbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,KADC,iBACKC,GADL,QACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7BC,gBAAAA,KAA6B,QAA7BA,KAA6B,EAArBC,QAAqB,QAArBA,QAAqB,EAAVC,QAAU,QAAVA,QAAU;AAAA;AAAA,uBACxCR,QAAQ,CAACS,IAAT,CAAc,YAAd,EAA2B;AAC3BH,kBAAAA,KAAK,EAAEA,KADoB;AAE3BC,kBAAAA,QAAQ,EAAEA,QAFiB;AAG3BC,kBAAAA,QAAQ,EAAEA;AAHiB,iBAA3B,EAKCE,IALD,CAKM,UAAAC,QAAQ,EAAI;AAChB,sBAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAA9B;AACAT,kBAAAA,GAAG,CAACU,MAAJ,CAAW,QAAX,EAAsBH,OAAtB;AAED,iBATD,EAUCI,KAVD,CAUO,UAAAC,CAAC,EAAI;AACVC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,wBAAMA,CAAN;AACD,iBAbD,CADwC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB/C,KAjBM;AAkBDG,IAAAA,MAlBC,oBAkBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACNnB,IAAI,CAACQ,IAAL,CAAU,aAAV,EAAyBC,IAAzB,CAA8B,UAAAC,QAAQ,EAAI;AAC9CO,kBAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAArB;AAA2B,iBADvB,EACyBG,KADzB,CAC+B,UAAAC,CAAC,EAAI;AACxCC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAe,iBAFX,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIb;AAtBM,GAFI;AA0BbI,EAAAA,SAAS,EAAE;AACTC,IAAAA,MADS,kBACFC,KADE,EACMX,OADN,EACc;AACrBW,MAAAA,KAAK,CAACX,OAAN,GAAgBA,OAAhB;AACD;AAHQ,GA1BE;AA+BbW,EAAAA,KAAK,EAAE;AACLX,IAAAA,OAAO,EAAE;AADJ,GA/BM;AAkCbY,EAAAA,OAAO,EAAE;AACPX,IAAAA,IADO,gBACFU,KADE,EACI;AACT,aAAOA,KAAK,CAACX,OAAb;AACD;AAHM;AAlCI,CAAf","sourcesContent":["import {HTTPAUTH} from \"@/http-common\";\nimport {HTTP} from \"@/http-common\";\n\nexport default {\n  name: \"LoginMethod\",\n  actions: {\n    async login(ctx , {email , password , remember}){\n      await HTTPAUTH.post('auth/login',{\n            email: email,\n            password: password,\n            remember: remember,\n        })\n            .then(response => {\n              const getData = response.data.result\n              ctx.commit('update' , getData)\n\n            })\n            .catch(e => {\n              console.log(e)\n              throw e\n            })\n\n    },\n    async logOut(){\n      await HTTP.post('auth/logout').then(response => {\n        console.log(response.data)}).catch(e => {\n        console.log(e)})\n    }\n  },\n  mutations: {\n    update(state , getData){\n      state.getData = getData\n    }\n  },\n  state: {\n    getData: [],\n  },\n  getters: {\n    data(state){\n      return state.getData\n    }\n  },\n}"]}]}