{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/components/app/Sidebar.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/components/app/Sidebar.vue","mtime":1650479147756},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcvc3JjL2Fzc2V0cy9jc3MvdmFyaWFibGVzLnNjc3MnOwpAaW1wb3J0ICcvc3JjL2Fzc2V0cy9jc3Mvc2lkZWJhci5zY3NzJzsK"},{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA","file":"Sidebar.vue","sourceRoot":"src/components/app","sourcesContent":["<template>\n  <div class=\"t-rr-s-sidebar-wrapper unselectable\">\n    <h5 class=\"first-uppercase\">{{ $t('project_files') }}</h5>\n    <!-- <Tree :treeData=\"tree\"></Tree> -->\n    <nav>\n      <ul class=\"t-rr-s-nav-list\">\n        <ListItem v-for=\"(item, index) in listFolder\" \n            :key=\"index\"\n            iconBefore=\"transporter-doc\"\n            listStyleIcon=\"transporter-Dropdown\"\n            :item=\"item\"\n            :idParent='index'\n            v-init:myvar=\"queryСhildFolders(item)\"\n            @childAction=\"childActionFu\">\n          <div class=\"t-rr-s-nav-list-wrapper-content\"\n                :class=\"{'active': $route.params.name === item.name}\"> \n            <i class=\"cursor-pointer transporter-Dropdown\"\n               @click=\"openChildFolder(item)\"\n               :class=\"[{'rotate--90' : !item.openFolder} , {'el-not-allowed' : !item.child_folders}]\" />\n            <img v-if=\"item.type === 'folder' && $route.params.name !== item.name\" class=\"mr-1\" src=\"@/assets/transporter-icon/Icon/folder.svg\">\n            <img v-if=\"item.type === 'folder' && $route.params.name === item.name\" class=\"mr-1\" src=\"@/assets/transporter-icon/Icon/folderLink.svg\">\n \n            <div @click=\"openContent(item)\"\n                 class=\"cursor-pointer t-rr-s-text-li\">\n              {{item.name}}\n            </div>\n          </div> \n        </ListItem>\n      </ul>\n    </nav>\n    <div class=\"flex-column-between\">\n        <FooterNavbar :actives=\"isActive\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport FooterNavbar from \"@/components/app/FooterNavbar\";\nimport {mapGetters , mapActions} from 'vuex'\nimport ListItem from '../ui/listItem.vue';\nimport QueryMixin from '@/mixins/query-mixin';\n// import Tree from '../ui/Tree';\n\n\nexport default {\n  name: \"Sidebar\",\n  components: {\n    FooterNavbar,\n    ListItem,\n  },\n  mixins: [\n    QueryMixin,\n  ],\n  data(){\n    return {\n      isActive: false,\n      listFolder: [],\n      active: 'home',\n    }\n  },\n  created(){    \n  },\n  mounted() {\n    let self = this\n    this.$root.$on('itemData', function (item) {\n      self.query(item)\n    })\n  },\n  computed: {\n    ...mapGetters(['dataFolderList']),\n    ...mapGetters(['dataHubList']),\n  },\n  methods: {\n    ...mapActions(['FolderList']),\n    query(item){\n      this.FolderList({parent_folder_id: item.top_folder_id, hub_id: this.dataHubList[0].hub_id})\n          .then(() => {\n            this.listFolder = this.dataFolderList\n            this.openContent(this.dataFolderList[0])\n          })\n    },\n    openContent(item) {\n      this.$root.$emit('folderItem' , item)\n      this.makeActive(item)\n    },\n    childActionFu(value) {\n      this.openContent(value)\n    },\n    queryСhildFolders(item){\n      if(!item.chaildValue) {\n        this.postData('/api/v1/Folder.getFolderList', {\n                      parent_folder_id: item.folder_id,\n                      hub_id: item.hub_id\n            })\n        .then((data) => {\n          item.chaildValue = data\n          if(item.chaildValue.length) item.valueFlag = true\n          this.$set(this.listFolder, this.listFolder.indexOf(item), item)\n      });\n      }\n    },\n    openChildFolder(item){\n      console.log(item)\n      item.openFolder = !item.openFolder\n\n      if(!item.children){\n        item.children = item.chaildValue\n        this.$set(this.listFolder, this.listFolder.indexOf(item), item)\n      } else {\n        item.children = false\n        this.$set(this.listFolder, this.listFolder.indexOf(item), item)\n      }\n    },\n    makeActive(item){\n      \n      console.log(888)\n      console.log(this.$route.params)\n      if (this.$route.params.parentFolderId === item.parent_folder_id) item.activeMenu = true;\n      console.log(item)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '/src/assets/css/variables.scss';\n@import '/src/assets/css/sidebar.scss';\n</style>"]}]}