{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/views/hub/List.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/views/hub/List.vue","mtime":1649347589819},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICdzcmMvYXNzZXRzL2Nzcy92YXJpYWJsZXMuc2Nzcyc7CkBpbXBvcnQgJ3NyYy9hc3NldHMvY3NzL2h1Yi1saXN0LnNjc3MnOwo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA","file":"List.vue","sourceRoot":"src/views/hub","sourcesContent":["<template>\n  <section class=\"t-rr-s-hub-list\">\n    <Table :data=\"listContent\">\n    </Table>\n  </section>\n</template>\n\n<script>\nimport Table from './Table'\nimport {mapGetters , mapActions} from 'vuex'\n\nexport default {\n  name: \"HubList\",\n  components: {\n    Table,\n  },\n  data() {\n    return {\n      listContent: [],\n    }\n  },\n  methods: {\n    ...mapActions(['ContentList']),\n    query(item){\n      console.log(333)\n      this.ContentList({hub_id: item.hub_id , parent_folder_id: item.folder_id})\n        .then(response => {\n          console.log(this.dataContentList)\n          console.log(response)\n          this.listContent = this.dataContentList\n\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    },\n  },\n  computed: mapGetters(['dataContentList']),\n  mounted() {\n    let self = this\n    this.$root.$on('folderItem', function (item) {\n      console.log(item)\n      self.query(item)\n    })\n    // let requestData = {\n    //   hub_id : null\n    // }\n    // this.ContentList(requestData)\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import 'src/assets/css/variables.scss';\n@import 'src/assets/css/hub-list.scss';\n</style>"]}]}