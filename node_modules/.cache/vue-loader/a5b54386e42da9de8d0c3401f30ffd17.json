{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/views/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/views/Login.vue","mtime":1650654224966},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8vIEBpbXBvcnQgJ35tYXRlcmlhbGl6ZS1jc3MvZGlzdC9jc3MvbWF0ZXJpYWxpemUubWluLmNzcyc7CkBpbXBvcnQgJ3NyYy9hc3NldHMvY3NzL3ZhcmlhYmxlcy5zY3NzJzsKQGltcG9ydCAnc3JjL2Fzc2V0cy9jc3MvbG9naW4tcGFnZS5zY3NzJzsK"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"t-rr-s-container-login unselectable\">\n  <div class=\"t-rr-s-container-login-block\">\n\n    <div class=\"t-rr-s-logo-wrapper\">\n        <Logo />\n    </div>\n    <div class=\"t-rr-s-login-wrapper\" >\n      <form @submit.prevent=\"onSubmit(login , password)\">\n        <br>\n        <Input \n              mask=\"E-mail\"\n              type=\"text\"\n              icon=\"transporter-Mail_outline\" \n              v-model.trim=\"login\"\n              class=\"mb-4\" />\n        <Input \n              mask=\"Password\" \n              icon=\"transporter-Safety\"\n              type=\"password\"\n              v-model.trim=\"password\"\n              class=\"mb-4\" />\n        <div class=\"flex-center-start ui-width-100-pr\">\n          <UiButton \n                  :title=\"title\"\n                  icon=\"false\"\n                  :disabled=\"(!login.includes('@') || password.length < 8)\" />\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport UiButton from '@/components/ui/Button'\nimport {login , required , minLength} from 'vuelidate/lib/validators'\n// import messages from \"@/plugins/utils/messages\"\nimport Input from \"@/components/ui/Input\"\nimport Logo from '@/components/app/Logo'\nimport {mapGetters , mapActions} from 'vuex';\n\n\n\n\nexport default {\n  name: \"Login\",\n  validations: {\n    login: {login , required},\n    password: {required , minLength: minLength(8)},\n  },\n  components: {\n    UiButton , Input , Logo\n  },\n  computed: {\n    ...mapGetters(['dataprofile']),\n  },\n  methods: {\n    ...mapActions(['profile']),\n    async onSubmit(login , password){\n        const formData = {\n          login: login,\n          password: password,\n        }\n        await this.$store.dispatch('login', formData)\n              .then((response) => {\n                console.log(5555)\n                console.log(response)\n                this.getProfile()\n                this.$router.push({ name: 'list' })\n              })\n              .catch(err => {\n                console.log(err.response.data)\n                this.$router.push('/login')\n              })\n    },\n    getProfile() {\n      this.profile()\n      .then(() => {\n        console.log(this.dataprofile)\n        localStorage.setItem('profile', JSON.stringify(this.dataprofile))\n      })\n    }\n  },\n  data() {\n    return {\n      title : 'Войти',\n      login : '',\n      password : '',\n    }\n  },\n  mounted() {\n    // if (messages[this.$route.query.message]){\n    //   this.$message(messages[this.$route.query.message])\n    // }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n// @import '~materialize-css/dist/css/materialize.min.css';\n@import 'src/assets/css/variables.scss';\n@import 'src/assets/css/login-page.scss';\n</style>"]}]}