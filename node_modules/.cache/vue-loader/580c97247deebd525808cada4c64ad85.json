{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/components/ui/Checkbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/components/ui/Checkbox.vue","mtime":1650295943725},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/babel-loader/lib/index.js","mtime":1644509624775},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNoZWNrYm94IiwKICAvLyBwcm9wczogewogIC8vICAgICB0aXRsZTogewogIC8vICAgICAgIHR5cGUgOiBTdHJpbmcsCiAgLy8gICAgIH0sCiAgLy8gICAgIHZhbHVlOiB7CiAgLy8gICAgICAgdHlwZSA6IEJvb2xlYW4sCiAgLy8gICAgIH0sCiAgLy8gICAgIGluZGV4OiB7CiAgLy8gICAgICAgdHlwZTogW1N0cmluZyAsIE51bWJlcl0KICAvLyAgICAgfQogIC8vICAgfSwKICAvLyBtZXRob2RzOiB7CiAgLy8gICBjaGVja0V2ZW50KCkgewogIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLm1vZGVsKTsKICAvLyAgICAgdGhpcy4kZW1pdCgnbmV3TW9kZWwnICwgdGhpcy5tb2RlbCkKICAvLyAgIH0KICAvLyB9LAogIC8vIGRhdGEoKSB7CiAgLy8gICByZXR1cm4gewogIC8vICAgICBtb2RlbCA6ICh0aGlzLnZhbHVlKSA/IHRydWUgOiBmYWxzZSwKICAvLyAgIH0KICAvLyB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAnY2hlY2tlZCcsCiAgICBldmVudDogJ2NoYW5nZScsCiAgICBpbmRleDogewogICAgICAgIHR5cGU6IFtTdHJpbmcgLCBOdW1iZXJdCiAgICB9CiAgfSwKICBwcm9wczogewogICAgY2hlY2tlZDogQm9vbGVhbiwKICAgIGluZGV4OiB7CiAgICAgICAgdHlwZTogW1N0cmluZyAsIE51bWJlcl0KICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["Checkbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Checkbox.vue","sourceRoot":"src/components/ui","sourcesContent":["<template>\n  <div class=\"el-check_wrap\">\n    <!-- <input class=\"el-checkbox\" type=\"checkbox\" :id=\"index\" @click=\"checkEvent()\" v-model=\"model\" style=\"display:none\"> -->\n    <input class=\"el-checkbox\" type=\"checkbox\" :id=\"index\" v-on:change=\"$emit('change', $event.target.checked)\" v-bind:checked=\"checked\" style=\"display:none\">\n    <label :for=\"index\" class=\"el-check\">\n      <svg width=\"18px\" height=\"18px\" viewBox=\"0 0 18 18\">\n        <path d=\"M1,9 L1,3.5 C1,2 2,1 3.5,1 L14.5,1 C16,1 17,2 17,3.5 L17,14.5 C17,16 16,17 14.5,17 L3.5,17 C2,17 1,16 1,14.5 L1,9 Z\">\n        </path>\n        <polyline points=\"1 9 7 14 15 4\">\n        </polyline>\n      </svg>\n    </label>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"Checkbox\",\n  // props: {\n  //     title: {\n  //       type : String,\n  //     },\n  //     value: {\n  //       type : Boolean,\n  //     },\n  //     index: {\n  //       type: [String , Number]\n  //     }\n  //   },\n  // methods: {\n  //   checkEvent() {\n  //     console.log(this.model);\n  //     this.$emit('newModel' , this.model)\n  //   }\n  // },\n  // data() {\n  //   return {\n  //     model : (this.value) ? true : false,\n  //   }\n  // },\n  model: {\n    prop: 'checked',\n    event: 'change',\n    index: {\n        type: [String , Number]\n    }\n  },\n  props: {\n    checked: Boolean,\n    index: {\n        type: [String , Number]\n    },\n  },\n}\n</script>\n<style lang=\"scss\">\n@import 'src/assets/css/variables.scss';\n@import 'src/assets/css/checkbox.scss';\n</style>"]}]}