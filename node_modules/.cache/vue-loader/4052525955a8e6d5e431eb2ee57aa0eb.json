{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/views/user/Acceptance.vue?vue&type=style&index=0&id=a5d78e26&scoped=true&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/views/user/Acceptance.vue","mtime":1650295943734},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnL3NyYy9hc3NldHMvY3NzL3ZhcmlhYmxlcy5zY3NzJzsKQGltcG9ydCAnL3NyYy9hc3NldHMvY3NzL2FjY2VwdGFuY2Uuc2Nzcyc7Cg=="},{"version":3,"sources":["Acceptance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA;AACA","file":"Acceptance.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <section class=\"acceptance unselectable\">\n    <div class=\"title-wrapper\">\n      <h2 class=\"list-h\">Приемки</h2>\n      <UiButton :title=\"title\"></UiButton>\n    </div>\n    <div class=\"tabs-search-wrapper\">\n        <UiTabs :getDataTabs=\"dataTabs\" @tab-idx=\"tabIdx\"/> \n    <div class=\"search-wrapper\">\n        <UiInput mask=\"Поиск\" \n                 icon=\"transporter-Search_tiny\" \n                 v-model.trim=\"searchRequest\" \n                 class=\"mr-3\" \n                 @keyup.enter.native=\"searchStart(searchRequest)\" \n                 style=\"margin-bottom: 0px\"/>\n\n        <btn-sec title=\"Найти\" \n                 type=\"todo\" \n                 @click.native=\"searchStart(searchRequest)\" />\n    </div>\n    </div>\n\n    <div class=\"wrap\">\n        <div v-for=\"(item , idx) in ListReportDataChanges\"\n            :key=\"idx\" class='element-tech-wrap'>\n                <div class='element-tech' >\n                    <div class=\"title-tech-wrp\">\n                        <h4>Приемка № {{item.id}}</h4>\n                        <UiMark :title=\"item.status | lang('ru')\"\n                                :icon=\"iconChoise(item)\" \n                                :styleChoise=\"styleChoise(item)\"\n                                class=\"mr-1\"\n                                 />\n\n                        <UiMark :title=\"item.references.hot.name | lang('ru')\"\n                                :icon=\"iconData.hot\"\n                                :styleChoise=\"colorStatus.hot\"\n                                v-if=\"item.references.hot.type\"\n                                />\n                    </div>\n                    <div class=\"title-tech-wrp\">\n                        <UiMark :title=\"item.due_date | date('date/time')\"\n                                :styleChoise=\"styleChoise(item)\"\n                                style=\"opacity: 0.6\"/>\n                    </div>\n\n                    <div v-if=\"item.references.classifier\">\n\n                        <p>{{item.references.classifier.code}} {{item.references.classifier.title}}</p>\n    <!--                    <p>Подвид работ: {{item.references.spec.name}}</p>-->\n                        <p>{{item.references.project.name}} , {{item.references.sector.name}} , {{item.references.place.name}}</p>\n                        <p>{{item.references.org.name}}</p>\n                    </div>\n\n\n                    <div class=\"tech-button-wrap\">\n                        <btn-sec title=\"Открыть\" type=\"todo\" @click.native=\"goToElement(item)\"></btn-sec>\n                        <btn-sec title=\"Принять к осмотру\" type=\"accept\"></btn-sec>\n                        <btn-sec title=\"Отклонить\" type=\"cancel\"></btn-sec>\n                    </div>\n                </div>\n        </div>\n    </div>\n  </section>\n</template>\n<script>\nimport UiButton from '@/components/ui/Button'\nimport UiInput from '@/components/ui/Input'\nimport btnSec from '@/components/ui/BtnSec'\nimport UiMark from '@/components/ui/Mark'\nimport UiTabs from '@/components/ui/Tabs'\nimport {HTTP} from \"@/http-common\";\n\nexport default {\n    name: \"Acceptance\",\n    components: {\n        UiButton , UiTabs , UiMark , btnSec, UiInput\n    },\n    data() {\n        return {\n            title : 'Создать приемку',\n            data : null,\n            ListReportData: [],\n            ListReportDataChanges: [],\n            errors : [],\n            tabNum: 0,\n            searchRequest: '',\n            iconData: {\n                new : '',\n                ended : 'transporter-users',\n                hot : 'transporter-Fire'\n            },\n            colorStatus: {\n                new : {\n                    background : '#FFC107',\n                },\n                ended : {\n                    background: '#D4EDDA',\n                    color: '#155724'\n                },\n                hot : {\n                    background: '#F8D7DA',\n                    color: '#721C24'\n                }\n            },\n            dataTabs : [\n                {\n                    title: 'Все',\n                },\n                {\n                    title: 'На сегодня',\n                },\n                {\n                    title: 'Горящие',\n                    icon: 'transporter-Fire',\n                    icon_color: '#d60000',\n\n                },\n                {\n                    title: 'Гибкий график',\n                    icon: 'transporter-Filter_add',\n\n                },\n            ]\n        }\n    },\n    beforeCreate(){\n      let apiData = {\n        method: '/api/v2/QAQC/Report.getList',\n        requestData: {\n          role: 'contractor',\n          references : [\"sector\" , 'hot' , 'classifier_code' , 'spec' , 'contractor' , 'project' , 'creator', 'customer', 'head_foreman', 'org' , 'place']\n        },\n      }\n\n      HTTP.get(apiData.method,{\n        params: apiData.requestData\n      })\n          .then(response => {\n            this.ListReportData = response.data.result\n            this.ListReportDataChanges = this.ListReportData\n            this.ListReportDataChanges.map(one => {\n              return one.references.hot = {\n                type: one.references.hot,\n                name: 'горячая'\n              }\n            })\n            this.ListReportDataChanges.map(one => {\n              if(one.due_date === null) return one.due_date = 'Время не назначено'\n            })\n          })\n          .catch(e => {\n            console.log(e)\n            throw e\n          })\n\n    },\n    methods: {\n        tabIdx(value){\n            console.log(value);\n            this.tabNum = value\n        },\n        iconChoise(item){\n            if(item.status === 'new') return\n            if(item.status === 'process_ended') return \n        },\n        styleChoise(item){\n            if(item.status === 'new') return this.colorStatus.new\n            if(item.status === 'process_ended') return this.colorStatus.ended\n\n\n        },\n        searchStart(request = ''){\n          let apiData = {\n            method: '/api/v2/QAQC/Report.getList',\n            requestData: {\n              find: request,\n              role: 'contractor',\n              references : [\"sector\" , 'hot' , 'classifier_code' , 'spec' , 'contractor' , 'project' , 'creator', 'customer', 'head_foreman', 'org' , 'place']\n            },\n          }\n\n          HTTP.get(apiData.method,{\n            params: apiData.requestData\n          })\n              .then(response => {\n                this.ListReportData = response.data.result\n                this.ListReportDataChanges = this.ListReportData\n                this.ListReportDataChanges.map(one => {\n                  return one.references.hot = {\n                    type: one.references.hot,\n                    name: 'горячая'\n                  }\n                })\n                this.ListReportDataChanges.map(one => {\n                  if(one.due_date === null) return one.due_date = 'Время не назначено'\n                })\n                this.tabsLogic()\n              })\n              .catch(e => {\n                console.log(e)\n                throw e\n              })\n        },\n        tabsLogic(){\n          if(this.tabNum === 2) this.ListReportDataChanges = this.ListReportData.filter(one => {\n            return one.references.hot.type\n          })\n          if(this.tabNum !== 2) this.ListReportDataChanges = this.ListReportData\n        },\n        goToElement(item){\n            if (item.id) this.$router.push({ name: 'OneAcceptance', params: { Id: item.id, status: item.status } })\n        }\n    },\n    watch: {\n        tabNum: function(){\n          this.tabsLogic()\n        }\n    },\n}\n</script>\n<style scoped lang=\"scss\">\n@import '/src/assets/css/variables.scss';\n@import '/src/assets/css/acceptance.scss';\n</style>\n"]}]}