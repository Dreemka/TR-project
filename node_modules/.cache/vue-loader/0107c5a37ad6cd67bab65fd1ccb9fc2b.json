{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/views/Sectors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/views/Sectors.vue","mtime":1644509587423},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/babel-loader/lib/index.js","mtime":1644509624775},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBVaUJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvdWkvQnV0dG9uJwppbXBvcnQge21hcEdldHRlcnMgLCBtYXBBY3Rpb25zfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNlY3RvciIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlIDogJ9CU0L7QsdCw0LLQuNGC0YwnLAogICAgICBkYXRhIDogbnVsbCwKICAgICAgZ2V0TGlzdERhdGEgOiBbXSwKICAgICAgZXJyb3JzIDogW10KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgcmVxdWVzdERhdGEgPSB7CiAgICAgIHJlZmVyZW5jZXMgOiBbInByb2plY3QiXQogICAgfQogICAgdGhpcy5TZWN0b3JzKHJlcXVlc3REYXRhKQogICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgIH0pCiAgICAuY2F0Y2goZXJyID0+IHsKICAgICAgY29uc29sZS5sb2coZXJyKQogICAgfSkKCiAgfSwKICBjb21wdXRlZDogbWFwR2V0dGVycyhbJ2RhdGFTZWN0b3JzJ10pLAogIG1ldGhvZHM6IG1hcEFjdGlvbnMoWydTZWN0b3JzJ10pLAogIGNvbXBvbmVudHM6IHsKICAgIFVpQnV0dG9uICwKICB9LAp9Cg=="},{"version":3,"sources":["Sectors.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sectors.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section class=\"sectors unselectable\">\n    <div class=\"title-wrapper\">\n      <h2 class=\"list-h\">Сектора </h2>\n      <UiButton :title=\"title\"></UiButton>\n    </div>\n    <table class=\"table table-striped table-hover\">\n      <thead>\n      <tr>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">НАзвание</th>\n        <th scope=\"col\">Проект</th>\n        <th scope=\"col\">Дата создания</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(item , idx) in dataSectors\"\n          :key=\"idx\">\n        <th scope=\"row\">{{item.id}}</th>\n        <td>{{item.name}}</td>\n        <td>{{item.references.project.name}}</td>\n        <td>{{item.date_create | date('date')}}</td>\n      </tr>\n      </tbody>\n    </table>\n  </section>\n</template>\n\n<script>\nimport UiButton from '@/components/ui/Button'\nimport {mapGetters , mapActions} from 'vuex'\nexport default {\n  name: \"Sector\",\n  data() {\n    return {\n      title : 'Добавить',\n      data : null,\n      getListData : [],\n      errors : []\n    }\n  },\n  mounted() {\n    let requestData = {\n      references : [\"project\"]\n    }\n    this.Sectors(requestData)\n    .then(response => {\n      console.log(response)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n\n  },\n  computed: mapGetters(['dataSectors']),\n  methods: mapActions(['Sectors']),\n  components: {\n    UiButton ,\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import 'src/assets/css/variables.scss';\n@import 'src/assets/css/sectors.scss';\n</style>"]}]}