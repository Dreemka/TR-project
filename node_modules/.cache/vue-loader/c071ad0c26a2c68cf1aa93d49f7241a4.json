{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/components/ui/listItem.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/components/ui/listItem.vue","mtime":1650479147759},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnL3NyYy9hc3NldHMvY3NzL3ZhcmlhYmxlcy5zY3NzJzsK"},{"version":3,"sources":["listItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA","file":"listItem.vue","sourceRoot":"src/components/ui","sourcesContent":["<template>\n  <li v-if=\"renderComponent\" class=\"ml-10\">\n    <slot></slot>\n    <i :class=\"iconAfter\"\n       v-if=\"iconAfter\"\n       style=\"font-size: 24px\"/>\n       <ChildListItem v-for=\"(child, index) in item.children\"\n                      :key=\"index\"\n                      :item=\"child\"\n                      :iconBefore=\"iconBefore\"\n                      :listStyleIcon=\"listStyleIcon\"\n                      @childAction=\"childAction\">\n        <div class=\"t-rr-s-nav-list-wrapper-content\"\n             :class=\"{'active': $route.params.name === child.name}\">\n          <i class=\"cursor-pointer\"\n             @click=\"go(child)\"\n             :class=\"[listStyleIcon , {'rotate--90' : !child.openFolder} , {'el-not-allowed' : !child.child_folders}]\" />\n          <!-- <i :class=\"iconBefore\"\n             v-if=\"iconBefore\"\n             style=\"font-size: 24px\"/>  -->\n            <img v-if=\"child.type === 'folder' && $route.params.name !== child.name\" class=\"mr-1\" src=\"@/assets/transporter-icon/Icon/folder.svg\">\n            <img v-if=\"child.type === 'folder' && $route.params.name === child.name\" class=\"mr-1\" src=\"@/assets/transporter-icon/Icon/folderLink.svg\">\n\n          <div @click=\"childAction(child)\"\n               class=\"cursor-pointer t-rr-s-text-li\">\n               {{ child.name }}\n          </div>\n        </div>\n                      \n       </ChildListItem>\n\n  </li>\n</template>\n\n<script>\n  import QueryMixin from '@/mixins/query-mixin';\n  // import ChildListItem from '../ui/childListItem.vue'\n\n  export default {\n    name: \"ChildListItem\",\n    components: {\n      // ChildListItem,\n    },\n    mixins: [\n      QueryMixin,\n    ],\n    data(){\n      return {\n        openFolder: false,\n        componentKey: 0,\n        response: [],\n        renderComponent: true,\n      }\n    },\n    props: {\n      iconBefore: {\n        type: String\n      },\n      iconAfter: {\n        type: String\n      },\n      listStyleIcon: {\n        type: String\n      },\n      item: {\n        type: [String,Number,Object,Array,Boolean]\n      },\n      urlQuery: {\n        type: String\n      },\n      paramsQuery: {\n        type: [String,Number,Object,Array,Boolean]\n      },\n      idParent: {\n        type: Number\n      }\n    },\n    created(){\n      if(this.urlQuery) {\n        this.postData(this.urlQuery, this.paramsQuery)\n        .then((data) => {\n          this.$emit('itemQueryData' , this.idParent , data)\n        });\n      }\n    },\n    methods: {\n      go(child){\n        let self = this\n        child.openFolder = !child.openFolder\n        if(child.children) {\n          child.children = false;\n          self.renderComponent = false;\n          \n          self.$nextTick(() => {\n            // А потом покажем снова\n            self.renderComponent = true;\n          })\n        } else {\n            this.postData(\"/api/v1/Folder.getFolderList\", {\n                parent_folder_id: child.folder_id,\n                hub_id: child.hub_id\n            })\n            .then((data) => {\n              child.children = data\n              self.renderComponent = false;\n              \n              self.$nextTick(() => {\n              // А потом покажем снова\n              self.renderComponent = true;\n            });\n              // this.$emit('itemQueryData' , this.idParent , data)\n            });\n        }\n      },\n      childAction(child){\n        // console.log(child)\n        this.$emit('childAction' ,child)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n@import '/src/assets/css/variables.scss';\n</style>"]}]}