{"remainingRequest":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/drema/Desktop/Drema/transporder/transporder/src/components/app/Sidebar.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/drema/Desktop/Drema/transporder/transporder/src/components/app/Sidebar.vue","mtime":1649455106733},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/css-loader/dist/cjs.js","mtime":1644509624658},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644509625188},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/postcss-loader/src/index.js","mtime":1644509624768},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/sass-loader/dist/cjs.js","mtime":1644509624762},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/cache-loader/dist/cjs.js","mtime":1644509624454},{"path":"/Users/drema/Desktop/Drema/transporder/transporder/node_modules/vue-loader/lib/index.js","mtime":1644509624966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnL3NyYy9hc3NldHMvY3NzL3ZhcmlhYmxlcy5zY3NzJzsKQGltcG9ydCAnL3NyYy9hc3NldHMvY3NzL3NpZGViYXIuc2Nzcyc7Cg=="},{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA","file":"Sidebar.vue","sourceRoot":"src/components/app","sourcesContent":["<template>\n  <div class=\"t-rr-s-sidebar-wrapper unselectable\">\n    <h5 class=\"first-uppercase\">{{ $t('project_files') }}</h5>\n    <nav>\n      <ul class=\"t-rr-s-nav-list\">\n        <ListItem v-for=\"(item, index) in listFolder\" \n            :key=\"index\"\n            iconBefore=\"transporter-doc\"\n            listStyleIcon=\"transporter-Dropdown\"\n            :item=\"item\"\n            urlQuery=\"/api/v1/Folder.getFolderList\"\n            :idParent='index'\n            :paramsQuery=\"{\n                      parent_folder_id: item.folder_id,\n                      hub_id: item.hub_id\n            }\"\n            @itemQueryData=\"itemQueryDataFu\">\n          <div @click=\"openContent(item)\" \n               class=\"cursor-pointer t-rr-s-text-li\">\n               {{item.chaildValue}}\n            {{item.name}}\n          </div>\n        </ListItem>\n      </ul>\n    </nav>\n    <div class=\"flex-column-between nav-main-block\">\n        <FooterNavbar :actives=\"isActive\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport FooterNavbar from \"@/components/app/FooterNavbar\";\nimport {mapGetters , mapActions} from 'vuex'\nimport ListItem from '../ui/listItem.vue';\n\nexport default {\n  name: \"Sidebar\",\n  components: {\n    FooterNavbar,\n    ListItem\n  },\n  data(){\n    return {\n      isActive: false,\n      listFolder: [],\n      openFolder: false,\n    }\n  },\n  created(){    \n  },\n  mounted() {\n    let self = this\n    this.$root.$on('itemData', function (item) {\n      console.log(item)\n      self.query(item)\n    })\n    // let requestData = {\n    //   Folder_id : null\n    // }\n    // this.FolderList(requestData)\n    // .then(response => {\n    //   console.log(response)\n    // })\n    // .catch(err => {\n    //   console.log(err)\n    // })\n  },\n  computed: {\n    ...mapGetters(['dataFolderList']),\n    ...mapGetters(['dataHubList']),\n  },\n  methods: {\n    ...mapActions(['FolderList']),\n    query(item){\n      this.FolderList({parent_folder_id: item.top_folder_id, hub_id: this.dataHubList[0].hub_id})\n          .then(response => {\n            console.log(response)\n            this.listFolder = this.dataFolderList\n            this.openContent(this.dataFolderList[0])\n          })\n    },\n    openContent(item) {\n      console.log(999)\n      console.log(item)\n      this.$root.$emit('folderItem' , item)\n    },\n    itemQueryDataFu(index , value) {\n      // item.itemQueryData = value\n      console.log(value)\n      console.log(this.listFolder[index])\n      this.listFolder[index].chaildValue = value\n      this.$forceUpdate();\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '/src/assets/css/variables.scss';\n@import '/src/assets/css/sidebar.scss';\n</style>"]}]}